{
  "description": "Catching responses containing multiple closing HTML tags.",
  "edition": 2,
  "graph": {
    "edges": [
      {
        "source": {
          "exec_alias": "exec",
          "node_id": 2
        },
        "target": {
          "exec_alias": "exec",
          "node_id": 1
        }
      },
      {
        "source": {
          "exec_alias": "exec",
          "node_id": 3
        },
        "target": {
          "exec_alias": "exec",
          "node_id": 5
        }
      },
      {
        "source": {
          "exec_alias": "true",
          "node_id": 5
        },
        "target": {
          "exec_alias": "exec",
          "node_id": 6
        }
      },
      {
        "source": {
          "exec_alias": "true",
          "node_id": 6
        },
        "target": {
          "exec_alias": "exec",
          "node_id": 2
        }
      }
    ],
    "nodes": [
      {
        "alias": "passive_end",
        "definition_id": "caido/passive-end",
        "display": {
          "x": 10,
          "y": 290
        },
        "id": 1,
        "inputs": [],
        "name": "Passive End",
        "version": "0.1.0"
      },
      {
        "alias": "javascript",
        "definition_id": "caido/http-code-js",
        "display": {
          "x": 10,
          "y": 190
        },
        "id": 2,
        "inputs": [
          {
            "alias": "request",
            "value": {
              "data": "$on_intercept_response.request",
              "kind": "ref"
            }
          },
          {
            "alias": "response",
            "value": {
              "data": "$on_intercept_response.response",
              "kind": "ref"
            }
          },
          {
            "alias": "code",
            "value": {
              "data": "/**\n * @param {HttpInput} input\n * @param {SDK} sdk\n * @returns {MaybePromise<Data | undefined>}\n */\nexport async function run({ request, response }, sdk) {\n  if (response) {\n    let headers = response.getHeaders();\n    let body = response.getBody().toText();\n    if (headers[\"Content-Type\"] == \"text/html\") {\n      let count = (body.match(/<\\/html>/g) || []).length;\n      if (count > 1) {\n        let description = `Found ${count} </html> tags in the response body`;\n        await sdk.findings.create({\n          title: \"More than one </html> tag\",\n          description: description,\n          request: request,\n          reporter: \"HTML Closure Finder\",\n          dedupeKey: description\n        });\n      }\n    }\n  }\n}\n",
              "kind": "string"
            }
          }
        ],
        "name": "HTML Closure Finder",
        "version": "0.1.0"
      },
      {
        "alias": "on_intercept_response",
        "definition_id": "caido/on-intercept-response",
        "display": {
          "x": 10,
          "y": -90
        },
        "id": 3,
        "inputs": [],
        "name": "On Intercept Response",
        "version": "0.1.0"
      },
      {
        "alias": "in_scope",
        "definition_id": "caido/in-scope",
        "display": {
          "x": 20,
          "y": 10
        },
        "id": 5,
        "inputs": [
          {
            "alias": "request",
            "value": {
              "data": "$on_intercept_response.request",
              "kind": "ref"
            }
          }
        ],
        "name": "In Scope",
        "version": "0.1.0"
      },
      {
        "alias": "if_else",
        "definition_id": "caido/if-else",
        "display": {
          "x": 20,
          "y": 100
        },
        "id": 6,
        "inputs": [
          {
            "alias": "condition",
            "value": {
              "data": "$in_scope.result",
              "kind": "ref"
            }
          }
        ],
        "name": "If/Else",
        "version": "0.1.0"
      }
    ]
  },
  "id": "2c5e2562-e590-4664-838b-956a31175bc6",
  "kind": "passive",
  "name": "HTML Closure Finder"
}